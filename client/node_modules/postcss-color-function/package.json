{
  "_args": [
    [
      "postcss-color-function@https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-2.0.1.tgz",
      "/home/nazrul/Development/Projects/social_sharetribe/client"
    ]
  ],
  "_from": "postcss-color-function@>=2.0.0 <3.0.0",
  "_id": "postcss-color-function@2.0.1",
  "_inCache": true,
  "_location": "/postcss-color-function",
  "_phantomChildren": {},
  "_requested": {
    "name": "postcss-color-function",
    "raw": "postcss-color-function@https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-2.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-2.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-2.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/postcss-cssnext"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-2.0.1.tgz",
  "_shasum": "9ad226f550e8a7c7f8b8a77860545b6dd7f55241",
  "_shrinkwrap": null,
  "_spec": "postcss-color-function@https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-2.0.1.tgz",
  "_where": "/home/nazrul/Development/Projects/social_sharetribe/client",
  "author": {
    "name": "Maxime Thirouin"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-color-function/issues"
  },
  "dependencies": {
    "css-color-function": "^1.2.0",
    "postcss": "^5.0.4",
    "postcss-message-helpers": "^2.0.0",
    "postcss-value-parser": "^3.3.0"
  },
  "description": "PostCSS plugin to transform W3C CSS color function to more compatible CSS.",
  "devDependencies": {
    "jscs": "^1.6.2",
    "jshint": "^2.5.6",
    "npmpub": "^3.1.0",
    "tape": "^3.0.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/postcss/postcss-color-function#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-plugin",
    "color",
    "colour",
    "function"
  ],
  "license": "MIT",
  "name": "postcss-color-function",
  "optionalDependencies": {},
  "readme": "# postcss-color-function [![Build Status](https://travis-ci.org/postcss/postcss-color-function.svg)](https://travis-ci.org/postcss/postcss-color-function)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to transform [W3C CSS color function][specs] to more compatible CSS.\n\n## Installation\n\n```console\n$ npm install postcss-color-function\n```\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar colorFunction = require(\"postcss-color-function\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(colorFunction())\n  .process(css)\n  .css\n```\n\nUsing this `input.css`:\n\n```css\nbody {\n  background: color(red a(90%))\n}\n\n```\n\nyou will get:\n\n```css\nbody {\n  background: rgba(255, 0, 0, 0.9)\n}\n```\n\nCheckout [tests](test) for examples.\n\n## Interface (according to CSS specs)\n\n```\ncolor( [ <color> | <hue> ] <color-adjuster>* )\n```\n\n### List of `color-adjuster`\n\n- `[red( | green( | blue( | alpha( | a(] ['+' | '-']? [<number> | <percentage>] )`\n- `[red( | green( | blue( | alpha( | a(] '*' <percentage> )`\n- ~~`rgb( ['+' | '-'] [<number> | <percentage>]{3} )`~~ @todo\n- ~~`rgb( ['+' | '-'] <hash-token> )`~~ @todo\n- ~~`rgb( '*' <percentage> ) |`~~ @todo\n- `[hue( | h(] ['+' | '-' | '*']? <angle> )`\n- `[saturation( | s(] ['+' | '-' | '*']? <percentage> )`\n- `[lightness( | l(] ['+' | '-' | '*']? <percentage> )`\n- `[whiteness( | w(] ['+' | '-' | '*']? <percentage> )`\n- `[blackness( | b(] ['+' | '-' | '*']? <percentage> )`\n- `tint( <percentage> )`\n- `shade( <percentage> )`\n- `blend( <color> <percentage> [rgb | hsl | hwb]? )`\n- ~~`blenda( <color> <percentage> [rgb | hsl | hwb]? )`~~ @todo\n- `contrast( <percentage>? )`\n\nNotes:\n\n- some adjusts have shortcuts,\n- can be used on every value on any property,\n- some values can use add/subtract/scale modifiers or a direct value.\n\n[Read the specs][specs] for more information.\n\n### Examples\n\n```css\nwhatever {\n  color: color(red a(10%));\n\n  background-color: color(red lightness(50%)); /* == color(red l(50%)); */\n\n  border-color: color(hsla(125, 50%, 50%, .4) saturation(+ 10%) w(- 20%));\n}\n```\n\n## FAQ\n\n### Can you support `currentcolor` so we can do `color(currentcolor adjuster())`?\n\nNo we cannot do that. `currentcolor` depends on the cascade (so the DOM) and we can't handle that in a simple preprocessing step. You need to handle that with polyfills.\n\n### Can we use CSS custom properties so we can do `color(var(--mainColor) adjuster())`?\n\nBy using [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) before this plugin, you can do that (sort of).\nYou have some examples in [cssnext playground](http://cssnext.io/playground/).\n\n---\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n\n[specs]: http://dev.w3.org/csswg/css-color/#modifying-colors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-color-function.git"
  },
  "scripts": {
    "lint": "jscs *.js **/*.js && jshint . --exclude-path .gitignore",
    "release": "npmpub",
    "test": "npm run lint && tape test"
  },
  "version": "2.0.1"
}
