{
  "_args": [
    [
      "page-bus@https://registry.npmjs.org/page-bus/-/page-bus-3.0.1.tgz",
      "/home/nazrul/Development/Projects/social_sharetribe/client"
    ]
  ],
  "_from": "page-bus@>=3.0.1 <4.0.0",
  "_id": "page-bus@3.0.1",
  "_inCache": true,
  "_location": "/page-bus",
  "_phantomChildren": {},
  "_requested": {
    "name": "page-bus",
    "raw": "page-bus@https://registry.npmjs.org/page-bus/-/page-bus-3.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/page-bus/-/page-bus-3.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/page-bus/-/page-bus-3.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/@kadira/storybook"
  ],
  "_resolved": "https://registry.npmjs.org/page-bus/-/page-bus-3.0.1.tgz",
  "_shasum": "701d3906bcebab8524e2390bf271a220e4f12e09",
  "_shrinkwrap": null,
  "_spec": "page-bus@https://registry.npmjs.org/page-bus/-/page-bus-3.0.1.tgz",
  "_where": "/home/nazrul/Development/Projects/social_sharetribe/client",
  "author": {
    "email": "mail@substack.net",
    "name": "James Halliday",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/page-bus/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1"
  },
  "description": "share an event emitter among pages and frames on the same domain",
  "devDependencies": {
    "tape": "^3.0.0"
  },
  "homepage": "https://github.com/substack/page-bus",
  "keywords": [
    "browser",
    "bus",
    "emitter",
    "event",
    "localStorage",
    "storage",
    "iframe",
    "offline",
    "offline-first",
    "postMessage",
    "webworker",
    "worker"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "page-bus",
  "optionalDependencies": {},
  "readme": "# page-bus\n\nshare an event emitter among pages and frames on the same domain\n\nThis module works offline and does not rely on any network IO.\n\nBehind the scenes, the localStorage API and the window `'storage'` event is used to synchronize\ncross-page events.\n\nPreviously this module used a shared worker, but shared workers need to elect a\nmaster for the `URL.createObjectURL()` api which got very complicated.\n\n# example\n\nJust create a bus, which returns an event emitter:\n\n``` js\nvar createBus = require('page-bus');\nvar bus = createBus();\n\nbus.on('hello', function (msg) {\n    console.log('msg=', msg);\n});\n\nbus.emit('hello', Date.now());\n```\n\nCompile with browserify then open this page up on a few tabs.\n\nThe messages get shared hooray!\n\n[Check out the demo on neocities.](https://substack.neocities.org/pagebus.html)\n\n# methods\n\n``` js\nvar createBus = require('page-bus')\n```\n\n## var bus = createBus(opts)\n\nCreate a new event emitter `bus`.\n\n* `opts.key` - the string key to save data. default: `'page-bus'`. By using a\ndifferent value, you can create namespaces.\n\nAll other pages on the same domain in the same browser will be able to open the\nevent emitter.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install page-bus\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/page-bus.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "3.0.1"
}
