{
  "_args": [
    [
      "@kadira/react-split-pane@https://registry.npmjs.org/@kadira/react-split-pane/-/react-split-pane-1.4.7.tgz",
      "/home/nazrul/Development/Projects/social_sharetribe/client"
    ]
  ],
  "_from": "@kadira/react-split-pane@>=1.4.0 <2.0.0",
  "_id": "@kadira/react-split-pane@1.4.7",
  "_inCache": true,
  "_location": "/@kadira/react-split-pane",
  "_phantomChildren": {},
  "_requested": {
    "name": "@kadira/react-split-pane",
    "raw": "@kadira/react-split-pane@https://registry.npmjs.org/@kadira/react-split-pane/-/react-split-pane-1.4.7.tgz",
    "rawSpec": "https://registry.npmjs.org/@kadira/react-split-pane/-/react-split-pane-1.4.7.tgz",
    "scope": "@kadira",
    "spec": "https://registry.npmjs.org/@kadira/react-split-pane/-/react-split-pane-1.4.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/@kadira/storybook-core"
  ],
  "_resolved": "https://registry.npmjs.org/@kadira/react-split-pane/-/react-split-pane-1.4.7.tgz",
  "_shasum": "6d753d4a9fe62fe82056e323a6bcef7f026972b5",
  "_shrinkwrap": null,
  "_spec": "@kadira/react-split-pane@https://registry.npmjs.org/@kadira/react-split-pane/-/react-split-pane-1.4.7.tgz",
  "_where": "/home/nazrul/Development/Projects/social_sharetribe/client",
  "author": {
    "name": "Kadira Inc."
  },
  "browserify": {
    "transform": [
      [
        "babelify"
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/kadirahq/react-split-pane"
  },
  "dependencies": {},
  "description": "React split-pane component",
  "devDependencies": {
    "@kadira/storybook": "^1.31.0",
    "babel-cli": "^6.6.5",
    "babel-eslint": "^6.0.0",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-plugin-transform-object-assign": "^6.5.0",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babelify": "^7.2.0",
    "browserify": "^13.0.0",
    "chai": "^3.5.0",
    "chai-spies": "^0.7.1",
    "coveralls": "^2.11.9",
    "eslint": "^2.5.3",
    "eslint-config-airbnb": "^6.2.0",
    "eslint-plugin-react": "^4.2.3",
    "express": "^4.13.4",
    "mochify": "^2.17.0",
    "mochify-istanbul": "^2.4.1",
    "raw-loader": "^0.5.1",
    "react": "^15.0.0",
    "react-addons-test-utils": "^15.0.0",
    "react-dom": "^15.0.0",
    "react-storybook-story": "^2.2.0",
    "style-loader": "^0.13.1",
    "surge": "^0.17.7",
    "watchify": "^3.7.0"
  },
  "homepage": "https://github.com/kadirahq/react-split-pane",
  "keywords": [
    "react",
    "react-component",
    "split-pane",
    "react-split-pane",
    "es6"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "@kadira/react-split-pane",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.8 || ^15.0.0",
    "react-dom": "^0.14.8 || ^15.0.0"
  },
  "readme": "# React Split Pane\n\nSplit-Pane component built with [React](http://facebook.github.io/react), can be split vertically or horizontally.\n\n\n[![Build Status](https://img.shields.io/travis/tomkp/react-split-pane/master.svg?style=flat-square)](https://travis-ci.org/tomkp/react-split-pane)\n[![Coverage Status](https://img.shields.io/coveralls/tomkp/react-split-pane/master.svg?style=flat-square)](https://coveralls.io/r/tomkp/react-split-pane)\n\n\nCheck out the [demo](http://react-split-pane.surge.sh/)\n\n\n```html\n   <SplitPane split=\"vertical\" minSize={50} defaultSize={100}>\n       <div></div>\n       <div></div>\n   </SplitPane>\n```\n\n```html\n    <SplitPane split=\"vertical\" minSize={50}>\n        <div></div>\n        <SplitPane split=\"horizontal\">\n            <div></div>\n            <div></div>\n        </SplitPane>\n    </SplitPane>\n```\n\n### Primary pane\n\nBy dragging 'draggable' surface you can change size of the first pane.\nThe first pane keeps then its size while the second pane is resized by browser window.\nBy default it is the left pane for 'vertical' SplitPane and the top pane for 'horizontal' SplitPane.\nIf you want to keep size of the second pane and let the first pane to shrink or grow by browser window dimensions,\nset SplitPane prop `primary` to `second`. In case of 'horizontal' SplitPane the height of bottom pane remains the same.\n\nResizing can be disabled by passing the `enableResizing` prop as `false`. Resizing is enabled by default.\n\nYou can also set the size of the pane using the `size` prop. Note that a size set through props ignores the `defaultSize` and `minSize` properties.\n\nIn this example right pane keeps its width 200px while user is resizing browser window.\n\n```html\n    <SplitPane split=\"vertical\" defaultSize={200} primary=\"second\">\n        <div></div>\n        <div></div>\n    </SplitPane>\n```\n\n### Persisting Positions\n\nEach SplitPane accepts an onChange function prop.  Used in conjunction with\ndefaultSize and a persistence layer, you can ensure that your splitter choices\nsurvive a refresh of your app.\n\nFor example, if you are comfortable with the trade-offs of localStorage, you\ncould do something like the following:\n\n```html\n    <SplitPane split=\"vertical\" minSize={50}\n               defaultSize={ localStorage.getItem('splitPos') }\n               onChange={ size => localStorage.setItem('splitPos', size) }>\n        <div></div>\n        <div></div>\n    </SplitPane>\n```\n\nDisclaimer: localStorage has a variety of performance trade-offs.  Browsers such\nas Firefox have now optimized localStorage use so that they will asynchronously\ninitiate a read of all saved localStorage data for an origin once they know the\npage will load.  If the data has not fully loaded by the time code accesses\nlocalStorage, the code will cause the page's main thread to block until the\ndatabase load completes.  When the main thread is blocked, no other JS code will\nrun or layout will occur.  In multiprocess browsers and for users with fast\ndisk storage, this will be less of a problem.  You *are* likely to get yelled at\nif you use localStorage.\n\nA potentially better idea is to use something like\nhttps://github.com/mozilla/localForage although hooking it up will be slightly\nmore involved.  You are likely to be admired by all for judiciously avoiding\nuse of localStorage.\n\n### Resizing callbacks\n\nIf you need more control over resizing, SplitPane can notify you about when resizing started\nand when it ended through two callbacks: `onDragStarted` and `onDragFinished`.\n\n### Customise Dividers\n\nBy default it gives a 5 pixel wide divider, but you can use your own elements for the divider with the `resizerChildren` property. Check the demo for a custom horizontal divider with a header and a button.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kadirahq/react-split-pane.git"
  },
  "scripts": {
    "compile": "babel -d lib/ src/",
    "compile:watch": "babel -w -d lib/ src/",
    "demo": "npm run compile && browserify demo/Example.js -d -t -o demo/bundle.js",
    "demo:publish": "npm run compile && browserify demo/Example.js -d -t -o demo/bundle.js && surge demo react-split-pane.surge.sh",
    "demo:watch": "npm run compile:watch & watchify demo/Example.js -d -t -o demo/bundle.js",
    "gh-pages": "bash ./.scripts/gh-pages.sh",
    "lint": "eslint src/",
    "prepublish": "npm run compile",
    "release:patch": "npm test && npm run compile && npm version patch && git push && npm publish",
    "storybook": "start-storybook -p 9001",
    "test": "npm run compile && mochify -R spec",
    "test:coverage": "node cover.js && cat lcov.info | coveralls && rm lcov.info",
    "test:watch": "npm run compile:watch & mochify -R spec --watch"
  },
  "version": "1.4.7"
}
